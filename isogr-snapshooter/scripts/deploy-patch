#!/usr/bin/env bash
# shellcheck disable=SC2155

log() {
	echo "deploy-patch: -> $*"
} >&2

warn() {
	printf "deploy-patch\e[1;33m[WARN]\e[m: -> %b\n" "$*"
} >&2


patch() {
	patchJSONBasePaths "$@"
	patchItemPageLinks "$@"
}

patchJSONBasePaths() {
	local base_path="${1:?Missing base path}"; shift
	local scrape_dir="${1:?Missing scrape dir}"

	while IFS= read -r file
	do
		log "Fixing[patchJSONBasePaths] ${file}"
		sed \
			-i \
			-e 's@\("sAjaxSource":\s*"\)/\(register\)@\1'"${base_path}"'\2@' \
			"${file}"
	done < <(fd -t f . -e html "${scrape_dir}/register")
}

patchItemPageLinks() {
	local base_path="${1:?Missing base path}"; shift
	local scrape_dir="${1:?Missing scrape dir}"

	while IFS= read -r file
	do
		log "Fixing[patchItemPageLinks] ${file}"
		sed \
			-i \
			-e 's@\(href="\)/@\1'"${base_path}"'@g' \
			-e 's@\(src="\)/@\1'"${base_path}"'@g' \
			"${file}"
	done < <(fd -t f . -e html "${scrape_dir}/item")
}

main() {
	export SCRAPE_ORIGIN_URL=https://geodetic.isotc211.org
	export DEFAULT_BASE_PATH=/

	if [[ $# -gt 0 ]]
	then
		local base_path="${1:-"${DEFAULT_BASE_PATH}"}"; shift
		local url="${1:-"${SCRAPE_ORIGIN_URL}"}"
		local domain="${url#http*://}"
		domain="${domain%%/*}"
		local scrape_dir="./${domain:?Missing domain}"

		patch "$base_path" "$scrape_dir"
	else
		show_usage
		exit 1
	fi
}

show_usage() {
	cat <<EOF
deploy-patch BASE_PATH [SCRAPE_DIR]

EXAMPLES
  > deploy-patch /                  # result === snapshot
  > deploy-patch /github_repo_name  # most likely what you want
  > deploy-patch ../                # ... this one, too
EOF
} >&2


main "$@"
